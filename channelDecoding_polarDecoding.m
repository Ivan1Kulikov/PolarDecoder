function [depolar] = channelDecoding_polarDecoding(PolarCode,QN_I)
%PolarCode - входная последовательность бит, подлежащих декодированию
%depolar - декодированнная последовательность
%u - последовательность для декодирования (полученная после
%умножения на обратную матрицу Корнекера)

len=length(PolarCode);

%определяем матрицу Gn
G_2 = ones(2, 2);
G_2(1, 2) = 0;
G_N = G_2;
Power=log2(len);
for i=1:Power-1
    G_N = kron(G_2, G_N);
end
invers_G_N=inv(G_N);%обратная матрица Кронекера

%u - последовательность, подлежащая декодированию
u=PolarCode*invers_G_N;

depolar = zeros(1,len); %инициализация выходной последовательности


k=1;%индекс перебора множества QN_I
for n = 1:len %перебор по всей длине входной последовательности

            %при кодировании в выходную последовательность передаются биты,
            %индексы которых есть в QN_I, так как они были переданы без
            %изменений, то декодируются также
            if ismember(n, QN_I)
                depolar(n) = u(k);
                k = k + 1;
            else
                %биты, индексы которых в QN_I отсутствовали,были заменены
                %нулями при кодировании
                depolar(n) = 0;
            end
end 


end

